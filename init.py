from flask import Flask, request, render_template_string
import google.generativeai as genai
import os
import requests

genai.configure(api_key="AIzaSyB434P__wR_o_rr5Q3PjOULqyKhMANRtgk")

app = Flask(__name__)

# üìå PROMPT ULTRA OPTIMIS√â
def generate_performance_prompt(subject, tone):
    return f"""
Tu es un expert de LinkedIn, sp√©cialis√© dans les posts viraux qui performent avec l‚Äôalgorithme 2025.

R√©dige un post LinkedIn optimis√© sur : "{subject}"

Respecte strictement ces consignes :

1. Accroche percutante dans les **2 premi√®res lignes** (positive, n√©gative ou personnelle)
2. R√©dige en **paragraphes courts**, avec **sauts de ligne** fr√©quents
3. Longueur : entre **900 et 1200 caract√®res** (pas plus)
4. Ton : {tone}, authentique, conversationnel, humain
5. **Aucune mention de lien externe**
6. Termine par une **question engageante** simple qui pousse √† commenter
7. Le contenu doit √™tre **√©ducatif**, **inspirant**, **personnel**, ou **utile**
8. Index de lisibilit√© entre 0 et 4 (accessible √† tous)
9. Tu peux utiliser **puces ou √©mojis**, mais avec mod√©ration

Objectif : g√©n√©rer du **temps de lecture √©lev√©**, **des commentaires** et **des sauvegardes**.

R√©dige un post complet, sans aucun titre, ni signature, ni lien. Commence directement par l‚Äôaccroche.
"""

# üñ• Interface HTML
TEMPLATE = '''
<!doctype html>
<title>G√©n√©rateur de Post LinkedIn Parfait</title>
<h1>‚ú® G√©n√©rateur de Post LinkedIn optimis√© (2025)</h1>
<form method=post>
  Sujet du post :<br><input type=text name=subject size=80 required><br><br>
  Ton :<br>
  <select name="tone">
    <option value="professionnel">Professionnel</option>
    <option value="inspirant" selected>Inspirant</option>
    <option value="personnel">Personnel</option>
    <option value="conversationnel">Conversationnel</option>
  </select><br><br>
  <input type=submit value="G√©n√©rer le post">
</form>

{% if post %}
<hr>
<h2>üí¨ Post g√©n√©r√© :</h2>
<pre style="white-space: pre-wrap;">{{ post }}</pre>
{% endif %}
'''

@app.route("/", methods=["GET", "POST"])
def index():
    post = ""

    if request.method == "POST":
        subject = request.form.get("subject", "")
        tone = request.form.get("tone", "inspirant")

        try:
            prompt = generate_performance_prompt(subject, tone)
            model = genai.GenerativeModel("gemini-1.5-pro")
            response = model.generate_content(prompt)
            post = response.text.strip()
        except Exception as e:
            post = f"Erreur lors de la g√©n√©ration : {e}"

    return render_template_string(TEMPLATE, post=post)

if __name__ == "__main__":
    app.run(debug=True)

